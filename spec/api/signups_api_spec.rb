=begin
#NationBuilder V2 API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NationbuilderClient::SignupsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SignupsApi' do
  before do
    # run before each test
    @api_instance = NationbuilderClient::SignupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SignupsApi' do
    it 'should create an instance of SignupsApi' do
      expect(@api_instance).to be_instance_of(NationbuilderClient::SignupsApi)
    end
  end

  # unit tests for create_signup
  # Create a signup
  # Creates a signup from given data
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Comma-delimited list of sideloaded resources to include as part of the response. See guidance [here](/api/v2/docs#overview--paginating-sideloads) about sideloading large numbers of resources and pagination.  Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter 
  # @option opts [String] :fields_signups Comma-delimited list of attributes to only return in the response
  # @option opts [String] :extra_fields_signups Comma-delimited list of extra attributes, which are only returned in the response if requested. Extract attributes for this resource: billing_address, mailing_address, home_address, primary_address, registered_address, user_submitted_address, work_address, profile_image_url
  # @option opts [SignupCreateRequest] :signup_create_request 
  # @return [SignupShowResponse]
  describe 'create_signup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_signup
  # Delete signup with provided ID
  # Delete signup with provided ID
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Comma-delimited list of sideloaded resources to include as part of the response. See guidance [here](/api/v2/docs#overview--paginating-sideloads) about sideloading large numbers of resources and pagination.  Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter, signup_tags, memberships, path_journeys, taggings, petition_signatures 
  # @option opts [String] :fields_signups Comma-delimited list of attributes to only return in the response
  # @option opts [String] :extra_fields_signups Comma-delimited list of extra attributes, which are only returned in the response if requested. Extract attributes for this resource: billing_address, mailing_address, home_address, primary_address, registered_address, user_submitted_address, work_address, profile_image_url
  # @return [EmptyMetaResponse]
  describe 'delete_signup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_signups
  # List all signups in a nation
  # Lists all signups
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Comma-delimited list of sideloaded resources to include as part of the response. See guidance [here](/api/v2/docs#overview--paginating-sideloads) about sideloading large numbers of resources and pagination.  Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter 
  # @option opts [String] :fields_signups Comma-delimited list of attributes to only return in the response
  # @option opts [String] :extra_fields_signups Comma-delimited list of extra attributes, which are only returned in the response if requested. Extract attributes for this resource: billing_address, mailing_address, home_address, primary_address, registered_address, user_submitted_address, work_address, profile_image_url
  # @option opts [String] :filter_nearby Filter signups by location (lat, long) and distance from the location in miles. Format for the parameter value is {\&quot;location\&quot;: \&quot;90.0,-180.0\&quot;, \&quot;distance\&quot;: 15}. If a distance is not provided, signups within 1 mile from the location will be returned.
  # @option opts [String] :filter_page_id Filters Signups by page_id, the id of the page they signed up from.
  # @option opts [String] :filter_with_email_address Filters signups by their associated email addresses. This filter will accept one of the following as a parameter: [eq, match, not_match, prefix, not_prefix, suffix, not_suffix]. The value is the email address to filter on.
  # @option opts [Boolean] :filter_with_bouncing_email Filter signups with bounced email addresses. When the value is true the filter returns signups that do have an email address marked as bounced. When the value is false the filter returns signups that do not have an email address marked as bounced
  # @option opts [String] :filter_tag_id 
  # @option opts [String] :page_number Page number to list (starting at 1)
  # @option opts [String] :page_size Number of results to display per page (default: 20, max: 100, min: 1)
  # @return [SignupIndexResponse]
  describe 'list_signups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for me_signup
  # Show signup assigned to auth token
  # Show signup assigned to auth token
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Comma-delimited list of sideloaded resources to include as part of the response. See guidance [here](/api/v2/docs#overview--paginating-sideloads) about sideloading large numbers of resources and pagination.  Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter, signup_tags, memberships, path_journeys, taggings, petition_signatures 
  # @option opts [String] :fields_signups Comma-delimited list of attributes to only return in the response
  # @option opts [String] :extra_fields_signups Comma-delimited list of extra attributes, which are only returned in the response if requested. Extract attributes for this resource: billing_address, mailing_address, home_address, primary_address, registered_address, user_submitted_address, work_address, profile_image_url
  # @return [SignupShowResponse]
  describe 'me_signup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for push_signup
  # Push signup data into nation
  # This endpoint attempts to match the input person resource to a person already in the nation. If a match is found, the matched person is updated and a 200 status code is returned. If a match is not found, a new person is created and a 201 status code is returned. Matches are found by including one of the following IDs in the request:   - civicrm_id   - county_file_id   - dw_id   - external_id   - email   - facebook_username   - ngp_id   - salesforce_id   - twitter_login   - van_id  The push endpoint also accepts all sideposted data that is allowed on the signup resource&#39;s create and update endpoints. Please see the top-level sideposting documentation for more information on sideposting signup relationships. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Comma-delimited list of sideloaded resources to include as part of the response. See guidance [here](/api/v2/docs#overview--paginating-sideloads) about sideloading large numbers of resources and pagination.  Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter, signup_tags, memberships, path_journeys, taggings, petition_signatures 
  # @option opts [String] :fields_signups Comma-delimited list of attributes to only return in the response
  # @option opts [String] :extra_fields_signups Comma-delimited list of extra attributes, which are only returned in the response if requested. Extract attributes for this resource: billing_address, mailing_address, home_address, primary_address, registered_address, user_submitted_address, work_address, profile_image_url
  # @option opts [SignupCreateRequest] :signup_create_request 
  # @return [SignupShowResponse]
  describe 'push_signup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for show_signup
  # Show signup with provided ID
  # Show signup with provided ID 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Comma-delimited list of sideloaded resources to include as part of the response. See guidance [here](/api/v2/docs#overview--paginating-sideloads) about sideloading large numbers of resources and pagination.  Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter, signup_tags, memberships, path_journeys, taggings, petition_signatures 
  # @option opts [String] :fields_signups Comma-delimited list of attributes to only return in the response
  # @option opts [String] :extra_fields_signups Comma-delimited list of extra attributes, which are only returned in the response if requested. Extract attributes for this resource: billing_address, mailing_address, home_address, primary_address, registered_address, user_submitted_address, work_address, profile_image_url
  # @return [SignupShowResponse]
  describe 'show_signup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_signup
  # Update an existing signup
  # Updates an existing signup
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include Comma-delimited list of sideloaded resources to include as part of the response. See guidance [here](/api/v2/docs#overview--paginating-sideloads) about sideloading large numbers of resources and pagination.  Supported sideloads: author, last_contacted_by, page, parent, precinct, recruiter, signup_profile, voter, signup_tags, memberships, path_journeys, taggings, petition_signatures 
  # @option opts [String] :fields_signups Comma-delimited list of attributes to only return in the response
  # @option opts [String] :extra_fields_signups Comma-delimited list of extra attributes, which are only returned in the response if requested. Extract attributes for this resource: billing_address, mailing_address, home_address, primary_address, registered_address, user_submitted_address, work_address, profile_image_url
  # @option opts [SignupUpdateRequest] :signup_update_request 
  # @return [SignupShowResponse]
  describe 'update_signup test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
