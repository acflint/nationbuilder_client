=begin
#NationBuilder V2 API

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 2.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for NationbuilderClient::BallotReadWriteAttributes
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe NationbuilderClient::BallotReadWriteAttributes do
  let(:instance) { NationbuilderClient::BallotReadWriteAttributes.new }

  describe 'test an instance of BallotReadWriteAttributes' do
    it 'should create an instance of BallotReadWriteAttributes' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(NationbuilderClient::BallotReadWriteAttributes)
    end
  end

  describe 'test attribute "cast_at"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "election_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "party"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "vote_method"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["voted", "absentee", "early"])
      # validator.allowable_values.each do |value|
      #   expect { instance.vote_method = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "voter_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
