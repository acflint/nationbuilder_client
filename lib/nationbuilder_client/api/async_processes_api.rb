# #NationBuilder V2 API
#
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
# The version of the OpenAPI document: 2.0
#
# Generated by: https://openapi-generator.tech
# Generator version: 7.9.0
#

require "cgi"

module NationbuilderClient
  class AsyncProcessesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Show async process with provided token ID
    # Show async process with provided token ID
    # @param id [String] id
    # @param [Hash] opts the optional parameters
    # @return [ShowAsyncProcess200Response]
    def show_async_process(id, opts = {})
      data, _status_code, _headers = show_async_process_with_http_info(id, opts)
      data
    end

    # Show async process with provided token ID
    # Show async process with provided token ID
    # @param id [String] id
    # @param [Hash] opts the optional parameters
    # @return [Array<(ShowAsyncProcess200Response, Integer, Hash)>] ShowAsyncProcess200Response data, response status code and response headers
    def show_async_process_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: AsyncProcessesApi.show_async_process ..."
      end
      # verify the required parameter 'id' is set
      if @api_client.config.client_side_validation && id.nil?
        fail ArgumentError, "Missing the required parameter 'id' when calling AsyncProcessesApi.show_async_process"
      end
      # resource path
      local_var_path = "/api/v2/async_processes/{id}".sub("{" + "id" + "}", CGI.escape(id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"]) unless header_params["Accept"]

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || "ShowAsyncProcess200Response"

      # auth_names
      auth_names = opts[:debug_auth_names] || ["BearerAuth"]

      new_options = opts.merge(
        operation: :"AsyncProcessesApi.show_async_process",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AsyncProcessesApi#show_async_process\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end
  end
end
